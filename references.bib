@inproceedings{AlvesSBBG09,
  author    = {Vander Alves and
               Daniel Schneider and
               Martin Becker and
               Nelly Bencomo and
               Paul Grace},
  title     = {Comparitive Study of Variability Management in Software Product Lines
               and Runtime Adaptable Systems},
  booktitle = {Third International Workshop on Variability Modelling of Software-Intensive
               Systems, Seville, Spain, January 28-30, 2009. Proceedings},
  pages     = {9--17},
  year      = {2009},
  url       = {http://www.vamos-workshop.net/proceedings/VaMoS\_2009\_Proceedings.pdf},
  timestamp = {Thu, 03 Mar 2016 09:16:23 +0100},
}



@book{Power01,
    author = {Alberts, David S and Hayes, Richard E},
    booktitle = {CCRP Publication Series},
    doi = {10.1038/nri2836},
    isbn = {1-893723-13-5},
    issn = {14741741},
    pages = {285},
    pmid = {20829886},
    title = {{Power to the Edge: Command, Control in the Information Age}},
    url = {http://oai.dtic.mil/oai/oai?verb=getRecord{\&}metadataPrefix=html{\&}identifier=ADA457861},
    year = {2003}
}


@book{Alberts2006,
author = {Alberts, David S and Hayes, Richard E},
file = {:Volumes/HD2/Doutorado/PROJETO{\_}SPL/Leituras/David S. Alberts - Understanding Command and Control (Future of Command and Control) (2006).pdf:pdf},
isbn = {1893723178,9781893723177},
mendeley-groups = {Pre-Revision},
publisher = {DoD Command and Control Research},
title = {{Understanding Command and Control (Future of Command and Control)}},
url = {http://www.dodccrp.org/files/Alberts{\_}UC2.pdf},
year = {2006}
}



@article{ABAR201713,
author = {Abar, Sameera and Theodoropoulos, Georgios K and Lemarinier, Pierre and O'Hare, Gregory M P},
doi = {https://doi.org/10.1016/j.cosrev.2017.03.001},
file = {:Users/junier/Downloads/reviewAgentSimulationFrameworks.pdf:pdf},
issn = {1574-0137},
journal = {Computer Science Review},
keywords = {Agent Based Modelling and Simulation (ABMS) tools,Artificial life / social science simulations,Modelling complex systems,Multi-agent computing,Software agent,Swarm intelligence},
mendeley-groups = {2Read},
pages = {13--33},
title = {{Agent Based Modelling and Simulation tools: A review of the state-of-art software}},
url = {http://www.sciencedirect.com/science/article/pii/S1574013716301198},
volume = {24},
year = {2017}
}


@techreport{FRANCE2014,
author = {(FRANCE), NATO SCIENCE A N D TECHNOLOGY ORGANIZATION NEUILLY-SUR-SEINE},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/(FRANCE) - 2014 - Command and Control (C2) Agility.pdf:pdf},
institution = {North Atlantic Treaty Organization},
keywords = {ADAPTATION,CASE STUDIES,INFORMATION EXCHANGE,MEASURES OF EFFECTIVENESS,MILITARY OPERATIONS,MISSIONS,NATO FORCES,RESILIENCE},
mendeley-groups = {Pre-Revision},
month = {oct},
number = {ADA616794},
title = {{Command and Control (C2) Agility}},
year = {2014}
}


@book{small01,
author = {Watts, Duncan J},
file = {:Users/junier/Downloads/Duncan J. Watts - Small Worlds{\_} The Dynamics of Networks between Order and Randomness (Princeton Studies in Complexity) (2003, Princeton University Press).pdf:pdf},
isbn = {0691117047,9780691117041},
mendeley-groups = {2Read},
publisher = {Princeton University Press},
title = {{Small Worlds: The Dynamics of Networks between Order and Randomness (Princeton Studies in Complexity)}},
year = {2003}
}

@article{small02,
abstract = {This paper presents a general virtual ring method to design and analyze small-world structured P2P networks on the base topologies embedded in ID spaces with distance metric. Its basic idea is to abstract a virtual ring from the base topology according to the distance metric, then build small-world long links in the virtual ring and map the links back onto the real network to construct the small-world routing tables for achieving logarithmic greedy routing efficiency. Four properties are proposed to characterize the base topologies that can be turned into small-world by the virtual ring method. The virtual ring method is applied to the base topologies of d-torus with Manhattan distance, high dimensional d-torus base topologies, and other base topologies including the unbalanced d-torus and the ring topology with tree distance. Theoretical analysis and simulation experiments demonstrate the efficiency and the resilience of the proposed overlays.},
annote = {an approach using virtual ring network to represent a structure of Small World network},
author = {Zhuge, H and Sun, X},
doi = {10.1109/TKDE.2008.102},
file = {:Users/junier/Downloads/haizhuge2008.pdf:pdf},
issn = {1041-4347},
journal = {IEEE Transactions on Knowledge and Data Engineering},
keywords = {Buildings,Design methodology,Distributed networks,Emerging technologies,Extraterrestrial measurements,Intrusion detection,Large-scale systems,Manhattan distance,Network topology,Query processing,Resilience,Routing,Sun,computational complexity,greedy algorithms,logarithmic greedy routing,network topology,peer-to-peer computing,small-world structured P2P overlay network,telecommunication network routing,telecommunication network topology,tree distance,trees (mathematics),virtual ring method},
mendeley-groups = {Related},
month = {dec},
number = {12},
pages = {1712--1725},
title = {{A Virtual Ring Method for Building Small-World Structured P2P Overlays}},
volume = {20},
year = {2008}
}


@article{nato01,
author = {Alberts, David and {K Huber}, Reiner and Moffat, James},
file = {:Users/junier/Downloads/N2C2M2{\_}web{\_}optimized.pdf:pdf},
mendeley-groups = {Related},
pages = {366},
title = {{NATO NEC C2 maturity model}},
year = {2010}
}

@inproceedings{SAS01,
author = {Laddaga, Robert and Robertson, Paul and Shrobe, Howard},
year = {2001},
month = {01},
pages = {1-5},
title = {Introduction to Self-adaptive Software: Applications.}
}

@article{SAS02,
author = {Kephart, Jeffrey and Chess, D M},
doi = {10.1109/MC.2003.1160055},
journal = {Computer},
pages = {41--50},
title = {{The Vision Of Autonomic Computing}},
volume = {36},
year = {2003}
}


@article{SAS03,
author = {Salehie, Mazeiar and Tahvildari, Ladan},
file = {:Users/junieramorim/Library/Application Support/Mendeley Desktop/Downloaded/Salehie, Tahvildari - 2009 - Self-adaptive software Landscape and research challenges.pdf:pdf},
journal = {TAAS},
mendeley-groups = {2Read},
title = {{Self-adaptive software: Landscape and research challenges}},
volume = {4},
year = {2009}
}


@book{SAS04,
editor = {Cheng, Betty H C and Giese, Holger and Inverardi, Paola and Magee, Jeff and de Lemos, Rog{\'{e}}rio},
file = {:Users/junieramorim/Library/Application Support/Mendeley Desktop/Downloaded/Hutchison, Mitchell - Unknown - Lecture Notes in Computer Science.pdf:pdf},
mendeley-groups = {Pre-Revision},
publisher = {Springer},
series = {Lecture Notes in Computer Science (LNCS)},
title = {{Software Engineering for Self-Adaptive Systems}},
url = {http://dx.doi.org/10.1007/978-3-642-02161-9},
volume = {5525},
year = {2009}
}

@book{SPL10,
author = {Apel, Sven and Batory, Don and K{\"{a}}stner, Christian and Saake, Gunter},
booktitle = {Jornal},
file = {:Users/junieramorim/Library/Application Support/Mendeley Desktop/Downloaded/Apel et al. - 2013 - Feature-Oriented Software Product Lines, Concepts and Implementation.pdf:pdf},
mendeley-groups = {Pre-Revision},
publisher = {Springer},
title = {{Feature-Oriented Software Product Lines, Concepts and Implementation}},
year = {2013}
}


@book{Alberts2011,
author = {Alberts, David S},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Alberts - 2011 - The Agility Advantage.pdf:pdf},
isbn = {978-1-893723-23-8},
publisher = {DoD Command and Control Research Program},
title = {{The Agility Advantage}},
year = {2011}
}


@misc{States.2019,
author = {United States},
keywords = {Military art and science -- Terminology.,Military art and science -- United States -- Termi,North Atlantic Treaty Organization -- Armed Forces,United States -- Armed Forces -- Terminology.},
mendeley-groups = {Related},
mendeley-tags = {North Atlantic Treaty Organization -- Armed Forces,Military art and science -- United States -- Termi,Military art and science -- Terminology.,United States -- Armed Forces -- Terminology.},
month = {July},
publisher = {Joint Chiefs of Staff Washington, D.C},
title = {{Department of Defense dictionary of military and associated terms [electronic resource] / Joint Chiefs of Staff}},
year = {2019}
}


@book{Alberts2017,
author = {Alberts, David S},
mendeley-groups = {Related},
pages = {30},
publisher = {Institute for Defense Analyses},
institution = {Institute for Defense Analyses},
title = {{Agility, Automation, and Autonomy}},
year = {2017}
}

@book{Alberts2000,
author = {Alberts, David S and Garstka, John J. and Stein, Frederick P.},
edition = {2a},
file = {:Users/junier/Downloads/Alberts{\_}NCW.pdf:pdf},
isbn = {1-57906-019-6},
mendeley-groups = {Related},
pages = {284},
publisher = {CCRP},
title = {{NETWORK CENTRIC WARFARE: Developing and Leveraging Information Superiority}},
year = {2000}
}


@inproceedings{ltl01,
address = {Berlin, Heidelberg},
author = {Chaki, Sagar and Clarke, Edmund M and Ouaknine, Jo{\"{e}}l and Sharygina, Natasha and Sinha, Nishant},
booktitle = {Integrated Formal Methods},
doi = {https://doi.org/10.1007/978-3-540-24756-2_8},
editor = {Boiten, Eerke A and Derrick, John and Smith, Graeme},
file = {:Users/junier/Downloads/chaki2004.pdf:pdf},
isbn = {978-3-540-24756-2},
mendeley-groups = {Related},
pages = {128--147},
publisher = {Springer Berlin Heidelberg},
title = {{State/Event-Based Software Model Checking}},
year = {2004}
}


@inproceedings{ltl02,
author = {Sousa, Gustavo and Rudametkin, Walter and Duchien, Laurence},
booktitle = {12th {\{}IEEE/ACM{\}} International Symposium on Software Engineering for Adaptive and Self-Managing Systems, SEAMS@ICSE 2017, Buenos Aires, Argentina, May 22-23, 2017},
doi = {10.1109/SEAMS.2017.6},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Sousa, Rudametkin, Duchien - 2017 - Extending Dynamic Software Product Lines with Temporal Constraints.pdf:pdf},
isbn = {978-1-5386-1550-8},
mendeley-groups = {Pre-Revision,2Read},
pages = {129--139},
publisher = {{\{}IEEE{\}} Computer Society},
title = {{Extending Dynamic Software Product Lines with Temporal Constraints}},
url = {https://doi.org/10.1109/SEAMS.2017.6},
year = {2017}
}


@inbook{baier,
author = {Solingen, Rini and Basili, Vic and Caldiera, Gianluigi and Rombach, Dieter},
doi = {10.1002/0471028959.sof142},
file = {:Users/junier/Downloads/7{\_}GQM.pdf:pdf},
isbn = {9780471028956},
mendeley-groups = {Advisor{\_}Recommendation},
title = {{Goal Question Metric (GQM) Approach}},
year = {2002}
}

@inproceedings{SAS05,
abstract = {The development of self-adaptive software requires the engineering of proper feedback loops where an adaptation logic controls the underlying software. The adaptation logic often describes the adaptation by using runtime models representing the underlying software and steps such as analysis and planning that operate on these runtime models. To systematically address this interplay, runtime megamodels, which are specific runtime models that have themselves runtime models as their elements and that also capture the relationships between multiple runtime models, have been proposed. In this paper, we go one step further and present a modeling language for runtime megamodels that considerably eases the development of the adaptation logic by providing a domain-specific modeling approach and a runtime interpreter for this part of a self-adaptive system. This supports development by modeling the feedback loops explicitly and at a higher level of abstraction. Moreover, it permits to build complex solutions where multiple feedback loops interact or operate on top of each other, which is leveraged by keeping the megamodels explicit and alive at runtime and by interpreting them.},
annote = {Advantages:
(1) the feedback loops are explicitly described in the megamodels,
(2) the adaptation is specified at a higher level of abstraction in the megamodels by a number of model operations that work on runtime models, 
(3) the megamodels are kept alive at runtime and following an interpreter approach, the runtime models and the control flow between the model operations can be easily adapted at runtime, and 
(4) composing and especially the stacking of feedback loops resp. megamodels becomes possible without any need to build in specific sensors and effectors in between the megamodels.},
author = {Vogel, T and Giese, H},
booktitle = {2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
doi = {10.1109/SEAMS.2012.6224399},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Vogel, Giese - 2012 - A language for feedback loops in self-adaptive systems Executable runtime megamodels.pdf:pdf},
keywords = {Adaptation models,Analytical models,Computational modeling,Feedback loop,Monitoring,Planning,Runtime,abstraction,adaptation logic,domain-specific modeling approach,executable runtime megamodel,feedback loop,feedback loops,megamodel,model interpretation,modeling language,program diagnostics,program interpreters,runtime interpreter,runtime models,self-adaptation,self-adaptive software,self-adaptive systems,self-adjusting systems,simulation languages},
mendeley-groups = {EXTRA(Set)},
month = {jun},
pages = {129--138},
title = {{A language for feedback loops in self-adaptive systems: Executable runtime megamodels}},
year = {2012}
}



@misc{dod01,
author = {States, United},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/States - 2019 - Department of Defense dictionary of military and associated terms electronic resource Joint Chiefs of Staff.pdf:pdf;:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/States - 2019 - Department of Defense dictionary of military and associated terms electronic resource Joint Chiefs of Staff(2).pdf:pdf},
keywords = {Military art and science -- Terminology.,Military art and science -- United States -- Termi,North Atlantic Treaty Organization -- Armed Forces,United States -- Armed Forces -- Terminology.},
mendeley-groups = {Related},
mendeley-tags = {Military art and science -- Terminology.,Military art and science -- United States -- Termi,North Atlantic Treaty Organization -- Armed Forces,United States -- Armed Forces -- Terminology.},
month = {feb},
publisher = {Joint Chiefs of Staff Washington, D.C},
title = {{Department of Defense dictionary of military and associated terms [electronic resource] / Joint Chiefs of Staff}},
year = {2019}
}


@inproceedings{MAPE001,
author = {Arcaini, P and Riccobene, E and Scandurra, P},
booktitle = {2015 IEEE/ACM 10th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
doi = {10.1109/SEAMS.2015.10},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Arcaini, Riccobene, Scandurra - 2015 - Modeling and Analyzing MAPE-K Feedback Loops for Self-Adaptation.pdf:pdf},
issn = {2157-2305},
keywords = {Abstract State Machines,Adaptation models,Analytical models,Cameras,Computational modeling,MAPE-K,MAPE-K feedback loop,Monitor-analyze-plan-execute over a shared knowled,Monitoring,Organizations,Unified modeling language,abstract stateful language,adaptation logic,autonomic systems,decentralised control,decentralized adaptation control specification,distributed self-adaptive system verification,finite state machines,formal logic,formal modeling,formal specification,meta properties,multi-agent systems,multiagent abstract state machines,program verification,self-adaptation,software fault tolerance,traffic monitoring system,validation {\&}amp,verification},
mendeley-groups = {SEAMS},
month = {may},
pages = {13--23},
title = {{Modeling and Analyzing MAPE-K Feedback Loops for Self-Adaptation}},
year = {2015}
}


@book{MC01,
annote = {Leitura at{\'{e}} a p{\'{a}}gina (63)

Identificar quais a{\c{c}}{\~{o}}es ser{\~{a}}o at{\^{o}}micas? Isso definir{\'{a}} o que ser{\'{a}} os estados (Ex.: Notifying)},
author = {Baier, Christel and Katoen, Joost-Pieter},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Baier, Katoen - 2008 - Principles of Model Checking (Representation and Mind Series).pdf:pdf},
isbn = {026202649X, 9780262026499},
mendeley-groups = {Pre-Revision,BASE},
publisher = {The MIT Press},
title = {{Principles of Model Checking (Representation and Mind Series)}},
year = {2008}
}


@book{c2_01,
annote = {• Conflicted C2: There is no collective objective. The only C2
that exists is that exercised by the individual contributors over
their own forces or organizations.


De-Conflicted C2: Entities interact just enough, share just
enough information, and give up just enough decision rights
to others so as to avoid adverse cross-impacts between and
among the participants in the collective.
• Coordinated C2—Entities now do more than simply modify
their intent, plans, and actions to avoid potential conflicts. In
Coordinated C2 they develop some degree of common intent
and an agreement to link actions in the various plans being
developed by all the entities. Entities (1) seek mutual support
for intent, (2) develop relationships and linkages between and
among entity plans and actions to reinforce or enhance effects,
(3) pool nonorganic resources to some extent, and (4) share
more information to improve the overall quality of information.
• Collaborative C2—Entities move beyond shared intent and
now seek to collaboratively develop a single shared plan. They
do this by (1) negotiating and establishing collective intent
and a shared plan, (2) establishing or reconfiguring roles, (3)
coupling actions, (4) sharing nonorganic resources, (5) pool-ing nonorganic resources to some extent, and (6) increasing
social interactions to augment shared awareness.
• Edge C2—Entities achieve self-synchronization. The collec-tive becomes a robustly networked collection of entities with
widespread and easy access to information, extensive shar-ing of information, rich and continuous interactions, and the
broadest possible distribution of decision rights.},
author = {{Marius S. Vassiliou David S. Alberts}, Jonathan Russell Agre},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Marius S. Vassiliou David S. Alberts - 2015 - C2 Re-envisioned The Future of the Enterprise.pdf:pdf},
isbn = {1466595809,9781466595804},
publisher = {CRC Press},
title = {{C2 Re-envisioned: The Future of the Enterprise}},
year = {2015}
}


@article{Rosenmuller2011,
address = {New York, NY, USA},
annote = {Tailoring Dynamic Software Product Lines

Sistema adaptativo: runtime reconfiguration (vis{\~{a}}o aproximada baseada em componentes) - adapta{\c{c}}{\~{a}}o de programas em n$\backslash$'$\backslash$ivel arquitetural.

DSPL: SPL + Adaptative systems concepts

DSPL pode suportar adapta{\c{c}}$\backslash${\~{}}oes baseadas em features.

FOP - Feature Oriented Programming ={\textgreater} permits to have the same variability presented by the FM

A dynamic binding unit is a set of static features that can be combined in runtime. We can have more than one binding units in the same DSPL},
author = {Rosenm{\"{u}}ller, Marko and Siegmund, Norbert and Pukall, Mario and Apel, Sven},
doi = {10.1145/2189751.2047866},
issn = {0362-1340},
journal = {SIGPLAN Not.},
keywords = {dynamic binding,feature-oriented programming,software product lines},
month = {oct},
number = {3},
pages = {3--12},
publisher = {ACM},
title = {{Tailoring Dynamic Software Product Lines}},
url = {http://doi.acm.org/10.1145/2189751.2047866},
volume = {47},
year = {2011}
}


@inproceedings{Stanton2007,
author = {Stanton, Neville and Walker, Guy and Jenkins, Daniel and Salmon, Paul and Young, Mark and Aujla, Amerdeep},
doi = {10.1007/978-3-540-73331-7_66},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Stanton et al. - 2007 - Models of Command and Control.pdf:pdf},
mendeley-groups = {C2},
month = {sep},
pages = {600--608},
title = {{Models of Command and Control}},
year = {2007}
}


@article{Alberts10,
author = {Alberts, David},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Alberts - 2007 - Agility, Focus, and Convergence The Future of Command and Control.pdf:pdf},
pages = {33},
journal = {The International C2 Journal},
title = {{Agility, Focus, and Convergence: The Future of Command and Control}},
volume = {1},
year = {2007}
}


@inproceedings{Fernandes2016,
author = {Fernandes, Ricardo and Hieb, Michael and Costa, Paulo},
booktitle = {21th ICCRTS – C2 in a Complex Connected Battlespace},
file = {:Users/junier/Downloads/paper{\_}60.pdf:pdf},
title = {{Levels of Autonomy: Command and Control of Hybrid Forces}},
year = {2016}
}



@article{c2-02,
annote = {- C2 agility based on adaptive network structure
- Adaptive networks provide C2 Agility but not necessary a change in C2 Approach

- Use mission completeness to measure C2 Agility is a weakness (Based on C2 theory and definition by DoD)
- quantitative metric about the battlefield awareness based on the network entropy (capacity of share information and provide awareness)
- adaptive network: high complexity of modelling and evaluating C2 performance
- Cyber Complex Adaptive System (CyCAS): assess agility of C2 adaptive network
- Complex Adaptive Systems (CAS) focused on threats and Cyber systems are CyCAS ={\textgreater} describes systems that are heavily dependent from the communication links
- C2 Networks as CyCAS: heterogeneous systems and interactions through the links (the interaction with surrounds through sensors can emerge behaviour.)

- Emergent behaviour ={\textgreater} The system is more than the sum of its parts 


- The use of agent based systems to model complex systems that have interactions among the elements and these interactions can result in different behaviours 

==={\textgreater} C2 scenario is compatible to use ABM (according to its characteristics and requirements). However, the modelling is using agents and the validation is difficult due to the characteristics of a system based in agents.
It can not be compared with human behaviour in real systems (but it can be considered during conclusions)

ABM to simulate C2 networks
{\{}In my work I'm considering the change in network structure as a change in C2 Approach. I need to check if this consideration is enough or it needs to be extended )

Complex systems can be represented as a network. It emphasises the dimension C2 Approach of the MDSPL where the network is represented.

Scale free networks are robust. (support nodes failures)
The representation used in my work is closer of the domain and the real world(**)

OBS.: (from the article)
We use scale-free networks as initial C2 network topologies because of their prevalence in real complex systems, in addition to their self-organization, efficiency, and robustness. Studies by Grant et al. and Jarvis support the use of scale-free networks for C2 by showing that many existing C2 networks have a scale-free structure}},
author = {Tran, Huy and Domercant, Jean and Mavris, Dimitri},
doi = {10.1177/1548512915592517},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Tran, Domercant, Mavris - 2015 - Evaluating the agility of adaptive command and control networks from a cyber complex adaptive systems p.pdf:pdf;:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Tran, Domercant, Mavris - 2015 - Evaluating the agility of adaptive command and control networks from a cyber complex adaptive system(2).pdf:pdf},
journal = {The Journal of Defense Modeling and Simulation: Applications, Methodology, Technology},
mendeley-groups = {Advisor{\_}Recommendation},
title = {{Evaluating the agility of adaptive command and control networks from a cyber complex adaptive systems perspective}},
volume = {12},
year = {2015}
}

@article{BencomoHA12,
annote = {SAS ={\textgreater} application of variability models in the SPL domain


Domain Engineering ( common architecture artifacts)
Applciation Engineering (uses DE to build products)


K ={\textgreater} models that drives the reconfiguration of SPL 

The context feedback gives to DSPL the response of its situation and suitability according to the requirements and constraints},
author = {Bencomo, Nelly and Hallsteinsen, Svein O and de Almeida, Eduardo Santana},
doi = {10.1109/MC.2012.292},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Bencomo, Hallsteinsen, de Almeida - 2012 - A View of the Dynamic Software Product Line Landscape.pdf:pdf},
journal = {{\{}IEEE{\}} Computer},
mendeley-groups = {2Read},
number = {10},
pages = {36--41},
title = {{A View of the Dynamic Software Product Line Landscape}},
url = {https://doi.org/10.1109/MC.2012.292},
volume = {45},
year = {2012}
}


@inproceedings{REV03,
abstract = {Dynamic Software Product Lines (DSPL) have gained significant attention in academic community by involving aspects of product lines and runtime adaptable systems development. Managing dynamic variations demands is a challenge addressed by DSPL paradigm. In this context, this paper introduces the results of a systematic literature review that involved 2,084 studies, with the objective of understanding how the dynamic derivation in DSPL is made. The contributions of this study are: a) an embracing analysis and classification of scientific literature in DSPL area, b) the definition of inputs that are needed to perform the dynamic derivation, c) the description of what composes these inputs, and d) the understanding of the process to perform the dynamic derivation. We conclude that due to the lack of maturity in the dynamic derivation field, there are many open research opportunities still available.},
author = {da Silva, J R F and da Silva, F A P and do Nascimento, L M and Martins, D A O and Garcia, V C},
booktitle = {2013 IEEE 14th International Conference on Information Reuse Integration (IRI)},
doi = {10.1109/IRI.2013.6642507},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/da Silva et al. - 2013 - The dynamic aspects of product derivation in DSPL A systematic literature review.pdf:pdf},
keywords = {Adaptation models,Computer architecture,Context,DSPL paradigm,Heuristic algorithms,Quality assessment,Runtime,Software,dynamic aspects,dynamic derivation,dynamic derivation field,dynamic software product lines,open research opportunities,product derivation,research and development,runtime adaptable systems development,scientific literature classification,software development management,systematic literature review},
mendeley-groups = {Pre-Revision},
month = {aug},
pages = {466--473},
title = {{The dynamic aspects of product derivation in DSPL: A systematic literature review}},
year = {2013}
}

@inproceedings{ShariflooMQBP16,
author = {Sharifloo, Amir Molzam and Metzger, Andreas and Quinton, Cl{\'{e}}ment and Baresi, Luciano and Pohl, Klaus},
booktitle = {Proceedings of the 11th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, SEAMS@ICSE 2016, Austin, Texas, USA, May 14-22, 2016},
doi = {10.1145/2897053.2897058},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Sharifloo et al. - 2016 - Learning and evolution in dynamic software product lines.pdf:pdf},
isbn = {978-1-4503-4187-5},
mendeley-groups = {SEAMS},
pages = {158--164},
publisher = {ACM},
title = {{Learning and evolution in dynamic software product lines}},
url = {https://doi.org/10.1145/2897053.2897058},
year = {2016}
}


@inproceedings{7194657,
annote = {observer to a trigger of DSPL changes},
author = {Baresi, L and Quinton, C},
booktitle = {2015 IEEE/ACM 10th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
doi = {10.1109/SEAMS.2015.24},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Baresi, Quinton - 2015 - Dynamically Evolving the Structural Variability of Dynamic Software Product Lines(2).pdf:pdf},
issn = {2157-2305},
keywords = {Adaptation models,Context,DSPL configuration space,Databases,FM,Frequency modulation,Monitoring,Runtime,Synchronization,dynamic software product line structural variabili,feature model,software architecture,software management,software product lines},
mendeley-groups = {Related},
month = {may},
pages = {57--63},
title = {{Dynamically Evolving the Structural Variability of Dynamic Software Product Lines}},
year = {2015}
}


@article{Pessoa2017,
author = {Pessoa, Leonardo and Fernandes, Paula and Castro, Thiago and Alves, Vander and Rodrigues, Gena$\backslash$'$\backslash$ina N and Carvalho, Hervaldo},
journal = {Information and Software Technology},
keywords = {Dynamic Software Product Lines,Maintainability,Reliability},
pages = {54--70},
title = {{Building reliable and maintainable Dynamic Software Product Lines: An investigation in the Body Sensor Network domain}},
volume = {86},
year = {2017}
}


@article{DSPL0-1,
author = {Lochau, Malte and B{\"{u}}rdek, Johannes and H{\"{o}}lzle, Stefan and Sch{\"{u}}rr, Andy},
doi = {10.1007/s10270-015-0470-4},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Lochau et al. - 2015 - Specification and automated validation of staged reconfiguration processes for dynamic software product lines.pdf:pdf},
journal = {Software {\&} Systems Modeling},
mendeley-groups = {Pre-Revision},
title = {{Specification and automated validation of staged reconfiguration processes for dynamic software product lines}},
volume = {16},
year = {2015}
}


@inproceedings{Lienhardt2018,
abstract = {Modern software systems are often built from customizable and inter-dependent components. Such customizations usually define which features are offered by the components, and may depend on backend components being configured in a specific way. As such system become very large, with a huge number of possible configurations and complex dependencies between components, maintenance and ensuring the consistency of such systems is a challenge. In this paper, we propose a Multi Software Product Line model to capture the complexity of such systems and pave the way to formal studies on them. We applied and implemented our model on a full Linux Distribution of almost 40,000 interconnected components and 3 million features, and present some initial analysis we did on this model.},
author = {Lienhardt, Michael and Damiani, Ferruccio and Donetti, Simone and Paolini, Luca},
booktitle = {ACM International Conference Proceeding Series},
doi = {10.1145/3168365.3170425},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Lienhardt et al. - 2018 - Multi Software Product Lines in the Wild.pdf:pdf},
isbn = {9781450353984},
keywords = {Composition,Configurable software,Linux distribution,Multi software product line,Software product line,Variability modeling},
mendeley-groups = {2Review},
month = {feb},
pages = {89--96},
title = {{Multi software product lines in the wild}},
year = {2018}
}



@article{Mason2001,
abstract = {Military Command and Control (C2) is the process by which commanders organize and employ force elements in order to achieve military objectives. This process needs to be represented in models of conflict in order to simulate realistic force behaviour and effectiveness. Since C2 is heavily influenced by human decision-making, modelling the C2 process is recognized as one of the most challenging areas for defence analysis. This paper describes on-going research into ways in which the effects of C2 can be incorporated successfully into constructive simulation models of combat. The research has developed a representation of C2 based on an intelligent agent framework in which the C2 processes of a military operation are carried out by a number of interacting command agents, representing the various military headquarters. An agent software architecture has been designed and implemented, along with algorithms for key C2 processes, namely (1) data fusion and recognized picture compilation, (2) decision-making and planning at operational and tactical levels, (3) plan supervision and repair. These have been implemented within two software testbeds - MOSES, a simulation of Operations Other Than War (OOTW) and CLARION+, an extension of CLARION, the UK land-air combat simulation.},
author = {Mason, Colin R. and Moffat, James},
doi = {10.1109/WSC.2000.899896},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Mason, Moffat, Lx - 2001 - Representing The C2 Process In Simulations Modelling The Human Decision-Maker.pdf:pdf},
issn = {02750708},
journal = {Winter Simulation Conference Proceedings},
mendeley-groups = {C2},
month = {sep},
pages = {940--949},
title = {{Representing the C2 process in simulations: Modelling the human decision-maker}},
volume = {1},
year = {2000}
}

@book{feedback01,
address = {USA},
author = {Hellerstein, Joseph L and Diao, Yixin and Parekh, Sujay and Tilbury, Dawn M},
isbn = {047126637X},
publisher = {John Wiley {\&}{\#}38; Sons, Inc.},
title = {{Feedback Control of Computing Systems}},
year = {2004}
}


@book{Dunin-Keplicz2010,
author = {Dunin-Keplicz, Barbara and Verbrugge, Rineke},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Dunin-Keplicz, Verbrugge - 2010 - Teamwork in Multi-Agent Systems, A Formal Approach.pdf:pdf},
mendeley-groups = {Pre-Revision},
publisher = {Wiley},
title = {{Teamwork in Multi-Agent Systems, A Formal Approach}},
year = {2010}
}


@incollection{gqm1,
author = {Solingen, Rini and Basili, Vic and Caldiera, Gianluigi and Rombach, Dieter},
doi = {10.1002/0471028959.sof142},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Solingen et al. - 2002 - Goal Question Metric (GQM) Approach.pdf:pdf},
isbn = {9780471028956},
mendeley-groups = {Advisor{\_}Recommendation},
title = {{Goal Question Metric (GQM) Approach}},
year = {2002}
}


@article{qa01,
annote = {- Architecture-based self-adaptation: one strategy to model multiple QAs self-adaptive systems

- Markov chain model most used to decision making process

- Architecture-based: uses a feedback loop with a runtime architecture model

- Software can change its structure(architecture X) or behavior(OK)

- QAQ - Quality Assessment Question

- The common element in all these limitations stems from the complex-ity of the problem, and the fact that over simplification of the cir-cumstances results in unrealistic problem statements that conse-quently create even more uncertainty in the system.

- Summary of answer to RQ1: Performance and cost are the most frequently addressed QAs; however, performance and reli-ability are the most commonly addressed individual QAs in pri-mary studies.

- The first is to use a certain model to express an indi-vidual QA, and its different characteristics. For instance, QA data variables and thresholds can be used to define different charac-teristics of performance (i.e., throughput and latency), or a utility function can be used both to express the QA characteristics, and also to support preferences of one characteristic over the other by using weights. The second is to use the same models to repre-sent the tradeoffs between multiple QAs in the entire system or certain system component. 
For instance, utility functions may be used to get the utility of each component in the system, and then the overall utility of the whole system, or discrete-time Markov chains may be used to represent system's behavior, which are sys-tem's states and related properties of interest and the probabili-ties of transitioning from one system state to another.

- Overall, our results indicate that existing approaches rarely consider priority of QAs.

===={\textgreater} Dimensions to realize multiple QAs in SAS: 

QAs specification can be mapped into Goals;
QAs monitoring and treatment as well as the handling can be mapped into Mechanisms;
QAs guarantees corresponds to Effects.


Role based X layers based (={\textgreater} more related to role based)},
author = {{Mahdavi Hezavehi}, Sara and Durelli, Vinicius and Weyns, Danny and Avgeriou, Paris},
doi = {10.1016/j.infsof.2017.03.013},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Mahdavi Hezavehi et al. - 2017 - A systematic literature review on methods that handle multiple quality attributes in architecture-based.pdf:pdf},
journal = {Information and Software Technology},
mendeley-groups = {EXTRA(Set)},
title = {{A systematic literature review on methods that handle multiple quality attributes in architecture-based self-adaptive systems}},
year = {2017}
}


@book{ClaesWohlinPerRuneson2012,
author = {{Claes Wohlin Per Runeson}, Martin H{\"{o}}st Magnus C Ohlsson Bj{\"{o}}rn Regnell Anders Wessl{\'{e}}n (auth.)},
edition = {1},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Claes Wohlin Per Runeson - 2012 - Experimentation in Software Engineering.pdf:pdf},
isbn = {978-3-642-29043-5,978-3-642-29044-2},
publisher = {Springer-Verlag Berlin Heidelberg},
title = {{Experimentation in Software Engineering}},
url = {http://gen.lib.rus.ec/book/index.php?md5=C9E97D7982CEAD36A8629317D6F0B15A},
year = {2012}
}


@article{C2-20,
annote = {- C2 agility based on adaptive network structure
- Adaptive networks provide C2 Agility but not necessary a change in C2 Approach

- Use mission completeness to measure C2 Agility is a weakness (Based on C2 theory and definition by DoD)
- quantitative metric about the battlefield awareness based on the network entropy (capacity of share information and provide awareness)
- adaptive network: high complexity of modelling and evaluating C2 performance
- Cyber Complex Adaptive System (CyCAS): assess agility of C2 adaptive network
- Complex Adaptive Systems (CAS) focused on threats and Cyber systems are CyCAS ={\textgreater} describes systems that are heavily dependent from the communication links
- C2 Networks as CyCAS: heterogeneous systems and interactions through the links (the interaction with surrounds through sensors can emerge behaviour.)

- Emergent behaviour ={\textgreater} The system is more than the sum of its parts 


- The use of agent based systems to model complex systems that have interactions among the elements and these interactions can result in different behaviours 

==={\textgreater} C2 scenario is compatible to use ABM (according to its characteristics and requirements). However, the modelling is using agents and the validation is difficult due to the characteristics of a system based in agents.
It can not be compared with human behaviour in real systems (but it can be considered during conclusions)

ABM to simulate C2 networks
{\{}In my work I'm considering the change in network structure as a change in C2 Approach. I need to check if this consideration is enough or it needs to be extended )

Complex systems can be represented as a network. It emphasises the dimension C2 Approach of the MDSPL where the network is represented.

Scale free networks are robust. (support nodes failures)
The representation used in my work is closer of the domain and the real world(**)

OBS.: (from the article)
We use scale-free networks as initial C2 network topologies because of their prevalence in real complex systems, in addition to their self-organization, efficiency, and robustness. Studies by Grant et al. and Jarvis support the use of scale-free networks for C2 by showing that many existing C2 networks have a scale-free structure}},
author = {Tran, Huy and Domercant, Jean and Mavris, Dimitri},
doi = {10.1177/1548512915592517},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Tran, Domercant, Mavris - 2015 - Evaluating the agility of adaptive command and control networks from a cyber complex adaptive systems p.pdf:pdf;:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Tran, Domercant, Mavris - 2015 - Evaluating the agility of adaptive command and control networks from a cyber complex adaptive system(2).pdf:pdf},
journal = {The Journal of Defense Modeling and Simulation: Applications, Methodology, Technology},
mendeley-groups = {Advisor{\_}Recommendation},
title = {{Evaluating the agility of adaptive command and control networks from a cyber complex adaptive systems perspective}},
volume = {12},
year = {2015}
}


@inproceedings{DSPL01-01,
abstract = {A Dynamic Software Product Line (DSPL) is a widely used approach to handle variability at runtime, e.g., By activating or deactivating features to adapt the running configuration. With the emergence of highly configurable and evolvable systems, DSPLs have to cope with the evolution of their structural variability, i.e., The Feature Model (FM) used to derive the configuration. So far, little is known about the evolution of the FM while a configuration derived from this FM is running. In particular, such a dynamic evolution changes the DSPL configuration space, which is thus unsynchronized with the running configuration and its adaptation capabilities. In this position paper, we propose and describe an initial architecture to manage the dynamic evolution of DSPLs and their synchronization. In particular, we explain how this architecture supports the evolution of DSPLs based on FMs extended with cardinality and attributes, which, to the best of our knowledge, has never been addressed yet.},
annote = {observer to a trigger of DSPL changes},
author = {Baresi, L and Quinton, C},
booktitle = {2015 IEEE/ACM 10th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
doi = {10.1109/SEAMS.2015.24},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Baresi, Quinton - 2015 - Dynamically Evolving the Structural Variability of Dynamic Software Product Lines(2).pdf:pdf},
issn = {2157-2305},
keywords = {Adaptation models,Context,DSPL configuration space,Databases,FM,Frequency modulation,Monitoring,Runtime,Synchronization,dynamic software product line structural variabili,feature model,software architecture,software management,software product lines},
mendeley-groups = {Related},
month = {may},
pages = {57--63},
title = {{Dynamically Evolving the Structural Variability of Dynamic Software Product Lines}},
year = {2015}
}


@inproceedings{DSPL01-02,
abstract = {Dynamic Software Product Lines (DSPL) have gained significant attention in academic community by involving aspects of product lines and runtime adaptable systems development. Managing dynamic variations demands is a challenge addressed by DSPL paradigm. In this context, this paper introduces the results of a systematic literature review that involved 2,084 studies, with the objective of understanding how the dynamic derivation in DSPL is made. The contributions of this study are: a) an embracing analysis and classification of scientific literature in DSPL area, b) the definition of inputs that are needed to perform the dynamic derivation, c) the description of what composes these inputs, and d) the understanding of the process to perform the dynamic derivation. We conclude that due to the lack of maturity in the dynamic derivation field, there are many open research opportunities still available.},
author = {da Silva, J R F and da Silva, F A P and do Nascimento, L M and Martins, D A O and Garcia, V C},
booktitle = {2013 IEEE 14th International Conference on Information Reuse Integration (IRI)},
doi = {10.1109/IRI.2013.6642507},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/da Silva et al. - 2013 - The dynamic aspects of product derivation in DSPL A systematic literature review.pdf:pdf},
keywords = {Adaptation models,Computer architecture,Context,DSPL paradigm,Heuristic algorithms,Quality assessment,Runtime,Software,dynamic aspects,dynamic derivation,dynamic derivation field,dynamic software product lines,open research opportunities,product derivation,research and development,runtime adaptable systems development,scientific literature classification,software development management,systematic literature review},
mendeley-groups = {Pre-Revision},
month = {aug},
pages = {466--473},
title = {{The dynamic aspects of product derivation in DSPL: A systematic literature review}},
year = {2013}
}


@article{DSPL01-03,
address = {New York, NY, USA},
annote = {Tailoring Dynamic Software Product Lines

Sistema adaptativo: runtime reconfiguration (vis{\~{a}}o aproximada baseada em componentes) - adapta{\c{c}}{\~{a}}o de programas em n$\backslash$'$\backslash$ivel arquitetural.

DSPL: SPL + Adaptative systems concepts

DSPL pode suportar adapta{\c{c}}$\backslash${\~{}}oes baseadas em features.

FOP - Feature Oriented Programming ={\textgreater} permits to have the same variability presented by the FM

A dynamic binding unit is a set of static features that can be combined in runtime. We can have more than one binding units in the same DSPL},
author = {Rosenm{\"{u}}ller, Marko and Siegmund, Norbert and Pukall, Mario and Apel, Sven},
doi = {10.1145/2189751.2047866},
issn = {0362-1340},
journal = {SIGPLAN Not.},
keywords = {dynamic binding,feature-oriented programming,software product lines},
month = {oct},
number = {3},
pages = {3--12},
publisher = {ACM},
title = {{Tailoring Dynamic Software Product Lines}},
url = {http://doi.acm.org/10.1145/2189751.2047866},
volume = {47},
year = {2011}
}


@article{DSPL01-04,
annote = {DSPL: Binding times for features and runtime reconfigurations

capacity to specify and validate complex constraints (DSPL) instead of boolean ones (classical SPL)

={\textgreater} different levels of abstraction

={\textgreater} 2 phases: Domain(1) and Application Engineering(2)

(1) FODA: Feature-Oriented domain analysis (identify anomalies within the variability (CSP, BDD or SAT)
In DSPL paradigm, the possibilities of reconfiguration need to be identified in domain engineering

(2)Staged configuration (depends of the binding time of each feature)-time variability

==={\textgreater} Insert validation and reconfiguration behaviors of DSPL


CSP + models checking =={\textgreater} to be scalability compatible


Configration stages (static and dynamic binding times for features) + Stateful reconfigration models(automata with sequences of stages) {\textgreater}{\textgreater}{\textgreater}{\textgreater}{\textgreater}{\textgreater} FIG 3


==={\textgreater} Configuration process: the features configuration is done in more than one step (is not made in one step for every feature f in F) ---- staged configuration

See notations in Section 3.1

Binding times representation: FIG 5



dead features: one or more features that are not present in any result of the product line.


Pre conditions to select/deselect a feature: FIG 12

Main idea: Staged configuration (configuration in stages)},
author = {Lochau, Malte and B{\"{u}}rdek, Johannes and H{\"{o}}lzle, Stefan and Sch{\"{u}}rr, Andy},
doi = {10.1007/s10270-015-0470-4},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Lochau et al. - 2015 - Specification and automated validation of staged reconfiguration processes for dynamic software product lines.pdf:pdf},
journal = {Software {\&} Systems Modeling},
mendeley-groups = {Pre-Revision},
title = {{Specification and automated validation of staged reconfiguration processes for dynamic software product lines}},
volume = {16},
year = {2015}
}


@inproceedings{DSPL01-05,
annote = {-evaluation model describes which information is used to represent the goals of the adaptation

-change model describes which options are available for adaptation.


1) In the rule-based policy the change model consists of a set of
adaptation rules. Each rule consists of a condition, which specifies whether
the rule should be applied based on the dynamic
behaviour change, and an action, which applies the rule. This policy does not contain an explicit evaluation model. This


2) 
As suggested by the name, the goal-based policy is governed
by a goal function in its evaluation model. This function is a
Boolean function that determines if the adaptation fulfils the goal.


3) 
In the utility-based policy, the evaluation model contains one
or more utility functions that map an adaptation to a double value.
The change model identifies a set of variation points and intervals
for their possible values.},
author = {Trollmann, Frank and F{\"{a}}hndrich, Johannes and Albayrak, Sahin},
booktitle = {Proceedings of the 13th International Conference on Software Engineering for Adaptive and Self-Managing Systems, SEAMS@ICSE 2018, Gothenburg, Sweden, May 28-29, 2018},
doi = {10.1145/3194133.3194137},
editor = {Andersson, Jesper and Weyns, Danny},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Trollmann, F{\"{a}}hndrich, Albayrak - 2018 - Hybrid adaptation policies towards a framework for classification and modelling of different co.pdf:pdf},
mendeley-groups = {SEAMS},
pages = {76--86},
publisher = {ACM},
title = {{Hybrid adaptation policies: towards a framework for classification and modelling of different combinations of adaptation policies}},
url = {https://doi.org/10.1145/3194133.3194137},
year = {2018}
}


@inproceedings{Rosenmuller2010,
author = {Rosenm{\"{u}}ller, Marko and Siegmund, Norbert},
booktitle = {VaMoS},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Rosenm{\"{u}}ller, Siegmund - 2010 - Automating the Configuration of Multi Software Product Lines.pdf:pdf},
mendeley-groups = {2Review},
title = {{Automating the Configuration of Multi Software Product Lines}},
year = {2010}
}


@inproceedings{MAPE01,
abstract = {The MAPE-K (Monitor-Analyze-Plan-Execute over a shared Knowledge) feedback loop is the most influential reference control model for autonomic and self-adaptive systems. This paper presents a conceptual and methodological framework for formal modeling, validating, and verifying distributed self-adaptive systems. We show how MAPE-K loops for self adaptation can be naturally specified in an abstract stateful language like Abstract State Machines. In particular, we exploit the concept of multi-agent Abstract State Machines to specify decentralized adaptation control by using MAPE computations. We support techniques for validating and verifying adaptation scenarios, and getting feedback of the correctness of the adaptation logic as implemented by the MAPE-K loops. In particular, a verification technique based on meta-properties is proposed to allow discovering unwanted interferences between MAPE-K loops at the early stages of the system design. As a proof-of concepts, we model and analyze a traffic monitoring system.},
annote = {Each adaptation concern has its own MAPE-k loop},
author = {Arcaini, P and Riccobene, E and Scandurra, P},
booktitle = {2015 IEEE/ACM 10th International Symposium on Software Engineering for Adaptive and Self-Managing Systems},
doi = {10.1109/SEAMS.2015.10},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Arcaini, Riccobene, Scandurra - 2015 - Modeling and Analyzing MAPE-K Feedback Loops for Self-Adaptation.pdf:pdf},
issn = {2157-2305},
keywords = {Abstract State Machines,Adaptation models,Analytical models,Cameras,Computational modeling,MAPE-K,MAPE-K feedback loop,Monitor-analyze-plan-execute over a shared knowled,Monitoring,Organizations,Unified modeling language,abstract stateful language,adaptation logic,autonomic systems,decentralised control,decentralized adaptation control specification,distributed self-adaptive system verification,finite state machines,formal logic,formal modeling,formal specification,meta properties,multi-agent systems,multiagent abstract state machines,program verification,self-adaptation,software fault tolerance,traffic monitoring system,validation {\&}amp,verification},
mendeley-groups = {SEAMS},
month = {may},
pages = {13--23},
title = {{Modeling and Analyzing MAPE-K Feedback Loops for Self-Adaptation}},
year = {2015}
}

@inproceedings{MAPE02,
abstract = {Self-adaptive software (SAS) systems monitor their own behavior and autonomously make dynamic adjustments to maintain desired properties in response to changes in the systems' operational contexts. Control theory provides verifiable feedback models to realize this kind of autonomous control for a broad class of systems for which precise quantitative or logical discrete models can be defined. Recent MAPE-K models, along with variants such as the hierarchical ACRA, address a broader range of tasks. However, they do not provide the inherent assurance mechanisms that control theory does, as they do not explicitly identify and establish the properties that reliable controllers should have. These properties, in general, result not from the abstract models, but from the specifics of control strategies, which are precisely what these models fail to analyze. We show that, even for systems too complex for direct application of classical control theory, the abstractions of control theory provide design guidance that identifies important control characteristics and raises critical design issues about the details of the strategy that determine the controllability of the resulting systems. This in turn enables careful reasoning about whether the control characteristics are in fact achieved. In this chapter we examine the control theory approach, explain several control strategies illustrated with examples from both domains, classical control theory and SAS, and show how the issues addressed by these strategies can and should be seriously considered for the assurance of self-adaptive software systems. From this examination we distill challenges for developing principles that may serve as the basis of a control theory for the assurance of self-adaptive software systems.},
address = {Cham},
author = {Litoiu, Marin and Shaw, Mary and Tamura, Gabriel and Villegas, Norha M and M{\"{u}}ller, Hausi A and Giese, Holger and Rouvoy, Romain and Rutten, Eric},
booktitle = {Software Engineering for Self-Adaptive Systems III. Assurances},
editor = {de Lemos, Rog{\'{e}}rio and Garlan, David and Ghezzi, Carlo and Giese, Holger},
file = {:Users/junier/Downloads/fb-assurances.pdf:pdf},
isbn = {978-3-319-74183-3},
mendeley-groups = {EXTRA(Set)},
pages = {90--134},
publisher = {Springer International Publishing},
title = {{What Can Control Theory Teach Us About Assurances in Self-Adaptive Software Systems?}},
year = {2017}
}


@article{SAS_001,
annote = {- Architecture-based self-adaptation: one strategy to model multiple QAs self-adaptive systems

- Markov chain model most used to decision making process

- Architecture-based: uses a feedback loop with a runtime architecture model

- Software can change its structure(architecture X) or behavior(OK)

- QAQ - Quality Assessment Question

- The common element in all these limitations stems from the complex-ity of the problem, and the fact that over simplification of the cir-cumstances results in unrealistic problem statements that conse-quently create even more uncertainty in the system.

- Summary of answer to RQ1: Performance and cost are the most frequently addressed QAs; however, performance and reli-ability are the most commonly addressed individual QAs in pri-mary studies.

- The first is to use a certain model to express an indi-vidual QA, and its different characteristics. For instance, QA data variables and thresholds can be used to define different charac-teristics of performance (i.e., throughput and latency), or a utility function can be used both to express the QA characteristics, and also to support preferences of one characteristic over the other by using weights. The second is to use the same models to repre-sent the tradeoffs between multiple QAs in the entire system or certain system component. 
For instance, utility functions may be used to get the utility of each component in the system, and then the overall utility of the whole system, or discrete-time Markov chains may be used to represent system's behavior, which are sys-tem's states and related properties of interest and the probabili-ties of transitioning from one system state to another.

- Overall, our results indicate that existing approaches rarely consider priority of QAs.

===={\textgreater} Dimensions to realize multiple QAs in SAS: 

QAs specification can be mapped into Goals;
QAs monitoring and treatment as well as the handling can be mapped into Mechanisms;
QAs guarantees corresponds to Effects.


Role based X layers based (={\textgreater} more related to role based)},
author = {{Mahdavi Hezavehi}, Sara and Durelli, Vinicius and Weyns, Danny and Avgeriou, Paris},
doi = {10.1016/j.infsof.2017.03.013},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Mahdavi Hezavehi et al. - 2017 - A systematic literature review on methods that handle multiple quality attributes in architecture-based.pdf:pdf},
journal = {Information and Software Technology},
mendeley-groups = {EXTRA(Set)},
title = {{A systematic literature review on methods that handle multiple quality attributes in architecture-based self-adaptive systems}},
year = {2017}
}


@article{SIMUL01,
abstract = {The key intent of this work is to present a comprehensive comparative literature survey of the state-of-art in software agent-based computing technology and its incorporation within the modelling and simulation domain. The original contribution of this survey is two-fold: (1) Present a concise characterization of almost the entire spectrum of agent-based modelling and simulation tools, thereby highlighting the salient features, merits, and shortcomings of such multi-faceted application software; this article covers eighty five agent-based toolkits that may assist the system designers and developers with common tasks, such as constructing agent-based models and portraying the real-time simulation outputs in tabular/graphical formats and visual recordings. (2) Provide a usable reference that aids engineers, researchers, learners and academicians in readily selecting an appropriate agent-based modelling and simulation toolkit for designing and developing their system models and prototypes, cognizant of both their expertise and those requirements of their application domain. In a nutshell, a significant synthesis of Agent Based Modelling and Simulation (ABMS) resources has been performed in this review that stimulates further investigation into this topic.},
annote = {BDI (Framework for AI) - Belief-Desire-Intention 

NetLogo ={\textgreater} low complexity and Medium Scale (strengh to model) - Large scale to extend the model

Repast Simphony ={\textgreater} complex (high strengh to learn/ large scale)},
author = {Abar, Sameera and Theodoropoulos, Georgios K and Lemarinier, Pierre and O'Hare, Gregory M P},
doi = {https://doi.org/10.1016/j.cosrev.2017.03.001},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Abar et al. - 2017 - Agent Based Modelling and Simulation tools A review of the state-of-art software.pdf:pdf},
issn = {1574-0137},
journal = {Computer Science Review},
keywords = {Agent Based Modelling and Simulation (ABMS) tools,Artificial life / social science simulations,Modelling complex systems,Multi-agent computing,Software agent,Swarm intelligence},
pages = {13--33},
title = {{Agent Based Modelling and Simulation tools: A review of the state-of-art software}},
url = {http://www.sciencedirect.com/science/article/pii/S1574013716301198},
volume = {24},
year = {2017}
}


@article{Schwarzrock2017,
annote = {={\textgreater} Formas de avalia{\c{c}}{\~{a}}o: mostra diversas formas de avalia{\c{c}}{\~{a}}o (Ex.: simula{\c{c}}{\~{a}}o)

={\textgreater} Usamos simula{\c{c}}$\backslash${\~{}}oes devido aos aspectos de custos, tempo, riscos envolvidos (Ex.: permiss{\~{a}}o para v{\^{o}}o)

={\textgreater} Aloca{\c{c}}{\~{a}}o de tarefas em times de drones com autonomia de execu{\c{c}}{\~{a}}o. As tarefas (miss{\~{a}}o) s{\~{a}}o enviadas por um comando central

={\textgreater} This problem can be handled as a task allocation among agents, in which the UAVs are the agents and the mission is associated with a set of tasks 

={\textgreater} Swarm GAP n{\~{a}}o {\'{e}} aplic{\'{a}}vel no caso de comando centralizado pois pode conduzir ao uso indevido dos recursos (drones idle)

={\textgreater} Therefore, the contribution of this paper is the proposal of a new method with three algorithm variants, which aim to: (i) allow the agents use their resources to perform as many tasks as possible; (ii) avoid the agents assigning their resources to tasks that are not very suitable for them; and (iii) allow an efficient workload balance among the agents, that is, to prevent some agents from being overloaded with tasks while others remain idle. 


1) SWARM-GAP: O token pode circular e na primeira vez a tarefa n{\~{a}}o ser alocada, mas na segunda ser. Isso {\'{e}} dado a capacidade (k) e a Tend{\^{e}}ncia (T). A escolha da tarefa {\'{e}} baseada apenas nas informa{\c{c}}$\backslash${\~{}}oes locais. N{\~{a}}o {\'{e}} determin$\backslash$'$\backslash$istico a escolha das tarefas. (pouca ou nenhuma comunica{\c{c}}{\~{a}}o entre drones)

2) AL: Recircula o token de modo a dar chance para tarefas n{\~{a}}o alocadas serem selecionadas, entretanto limpa a lista de drones visitados mantendo o restante das informa{\c{c}}$\backslash${\~{}}oes (melhoria do SWARM-GAP). O token pode circular indefinidamente com tarefas n{\~{a}}o alocadas pois n{\~{a}}o h{\'{a}} recursos dispon$\backslash$'$\backslash$iveis no drone.

3) SAL: ordena a lista das tarefas baseado na capacidade de execu{\c{c}}{\~{a}}o para evitar que o drone seja alocado em tarefas de baixo desempenho ou import{\^{a}}ncia. A lista de tarefas {\'{e}} ordenada pelos UAV com base nas capacidades e tend{\^{e}}ncias.

4) LAL: Aperfei{\c{c}}oa o SAL com um limitador de sele{\c{c}}{\~{a}}o de tarefas para evitar que um drone selecione muitas tarefas e gere um estado de idle em outro (sem tarefas). Para cada rodada do token, cada drone s{\'{o}} pode selecionar uma quantidade limitada de tarefas de modo que seja permitido que outro drone tamb{\'{e}}m possa escolher tarefas (inclusive com capacidade maior que o anterior)

Estrutura da Avalia{\c{c}}{\~{a}}o:
- Experimental setup do artigo est{\'{a}} dentro do Planejamento da Experimenta{\c{c}}{\~{a}}o
- Cada cen{\'{a}}rio da tabela 1 corresponde a um contexto. {\'{E}} poss$\backslash$'$\backslash$ivel pois utiliza simula{\c{c}}{\~{a}}o.
- O algoritmo {\'{e}} um fator e ser{\'{a}} trocado em cada cen{\'{a}}rio para teste (vari{\'{a}}vel independente)
- VARIAVEIS DEPENDENTES: total rewards, makes pan, qualidade das tarefas, quantidade das tarefas conclu$\backslash$'$\backslash$idas, quantidade de mensagens e tempo de execu{\c{c}}{\~{a}}o (Se{\c{c}}{\~{a}}o 6 do artigo - parte do planejamento do experimento)
- Os valores das vari{\'{a}}veis independentes s{\~{a}}o escolhidos aleatoriamente

- O design adotado foi: 1 fator com mais de 2 tratamentos (o fator {\'{e}} o algoritmo e o tratamento feito foi os 4 tipos Swarm, AL, SAL, LAL) - Muda o algoritmo e executa novamente com o mesmo contexto (cen{\'{a}}rio) [[The scenarios were run 30 times for each proposed algorithm ]]
Obs.: Poderia ter colocado: ``The experimental design used in this work was{\ldots}''

- Amea{\c{c}}as: Amea{\c{c}}a de Conclus{\~{a}}o. (As afirma{\c{c}}$\backslash${\~{}}oes feitas usando os gr{\'{a}}ficos podem ser questionadas se considerarmos a faixa de erro - desvio)

- Trabalhos futuros: O time pode mudar.},
author = {Schwarzrock, Janaína and Zacarias, Iulisloi and Bazzan, Ana L C and de Freitas, Edison P and {de Araujo Fernandes}, Ricardo Queiroz and Moreira, Leonardo Henrique},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Schwarzrock et al. - 2017 - Solving Task Allocation Problem in Multi Unmanned Aerial Vehicles Systems Using Swarm Intelligence.pdf:pdf},
institution = {Institute of Informatics Federal University of Rio Grande do Sul; Brazilian Army},
journal = {Engineering Applications of Artificial Intelligence},
mendeley-groups = {Pre-Revision},
title = {{Solving Task Allocation Problem in Multi Unmanned Aerial Vehicles Systems Using Swarm Intelligence}},
year = {2017}
}


@inproceedings{Vogel01,
annote = {self-adaptative system ={\textgreater} feedback loop to adapt changes at runtime

adaptation engine(feedback loop) + adaptable software(domain logic)

mRUBiS -{\textgreater} event simulator to test and validate a self-healing model. In this case, the model is a CompArch model.


https://github.com/thomas-vogel/mRUBiS/wiki/CompArch-Modeling-Editor


https://github.com/thomas-vogel/mRUBiS},
author = {Vogel, Thomas},
booktitle = {Proceedings of the 13th International Conference on Software Engineering for Adaptive and Self-Managing Systems, SEAMS@ICSE 2018, Gothenburg, Sweden, May 28-29, 2018},
doi = {10.1145/3194133.3194161},
editor = {Andersson, Jesper and Weyns, Danny},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Vogel - 2018 - mRUBiS an exemplar for model-based architectural self-healing and self-optimization(2).pdf:pdf},
mendeley-groups = {SEAMS},
pages = {101--107},
publisher = {ACM},
title = {{mRUBiS: an exemplar for model-based architectural self-healing and self-optimization}},
url = {https://doi.org/10.1145/3194133.3194161},
year = {2018}
}

@article{transf01,
author = {Gorschek, Tony and Garre, Per and Larsson, Stig and Wohlin, Claes},
doi = {10.1109/MS.2006.147},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Gorschek et al. - 2006 - A Model for Technology Transfer in Practice.pdf:pdf},
journal = {Software, IEEE},
mendeley-groups = {Advisor{\_}Recommendation},
pages = {88--95},
title = {{A Model for Technology Transfer in Practice}},
volume = {23},
year = {2006}
}

@article{AnthonyAlston2003,
author = {{Anthony Alston}},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Anthony Alston - 2003 - Network Enabled Capability – the concept.pdf:pdf},
journal = {Journal of Defence Science},
mendeley-groups = {BASE},
number = {3},
pages = {108--116},
title = {{Network Enabled Capability – the concept}},
volume = {8},
year = {2003}
}


@book{SE03,
annote = {DSPL Architecture:
Structure + Behavior + Goals

Road Map I:
1) Modelling dimensions
2) Requirements (usable and compatible language)
3) Engineering (feedback loops)
4) Assurances},
editor = {Cheng, Betty H C and Giese, Holger and Inverardi, Paola and Magee, Jeff and de Lemos, Rog{\'{e}}rio},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Hutchison, Mitchell - Unknown - Lecture Notes in Computer Science.pdf:pdf},
mendeley-groups = {Pre-Revision,BASE},
publisher = {Springer},
series = {Lecture Notes in Computer Science (LNCS)},
title = {{Software Engineering for Self-Adaptive Systems}},
url = {http://dx.doi.org/10.1007/978-3-642-02161-9},
volume = {5525},
year = {2009}
}


@article{DSPL100-1,
author = {B{\'{e}}can, Guillaume and Behjati, Razieh and Gotlieb, Arnaud and Acher, Mathieu},
doi = {10.1145/2791060.2791068},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/B{\'{e}}can et al. - 2015 - Synthesis of Attributed Feature Models From Product Descriptions.pdf:pdf},
mendeley-groups = {BASE},
title = {{Synthesis of Attributed Feature Models From Product Descriptions}},
year = {2015}
}


@article{SAS100-02,
annote = {RQ1: What is the current state of research on control-theoretical adaptation of software at the application and middleware level?
RQ2: What are the model paradigms used for control-theoretical adaptation of software?
RQ3: What are the control strategies used for control-theoretical adaptation of software?
RQ4: What type of goals are achieved with control- theoretical adaptation of software and what kind of guarantees are provided?

Even most of the theoretical-control in real world be non-linear, the linear models are more applied

Model parameters update: behavioral changes (could be model change -{\textgreater} more complex)

PID-Proportional-Integral-Derivative
MPC-Model Predictive Control (it uses models taht represent high complex systems in dynamic way)},
author = {Shevtsov, Stepan and Berekmeri, Mihaly and Weyns, Danny and Maggio, Martina},
doi = {10.1109/TSE.2017.2704579},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Shevtsov et al. - 2017 - Control-Theoretical Software Adaptation A Systematic Literature Review.pdf:pdf},
journal = {IEEE Transactions on Software Engineering},
mendeley-groups = {EXTRA(Set)},
pages = {1},
title = {{Control-Theoretical Software Adaptation: A Systematic Literature Review}},
volume = {PP},
year = {2017}
}

@article{Mason2001,
abstract = {Military Command and Control (C2) is the process by which commanders organize and employ force elements in order to achieve military objectives. This process needs to be represented in models of conflict in order to simulate realistic force behaviour and effectiveness. Since C2 is heavily influenced by human decision-making, modelling the C2 process is recognized as one of the most challenging areas for defence analysis. This paper describes on-going research into ways in which the effects of C2 can be incorporated successfully into constructive simulation models of combat. The research has developed a representation of C2 based on an intelligent agent framework in which the C2 processes of a military operation are carried out by a number of interacting command agents, representing the various military headquarters. An agent software architecture has been designed and implemented, along with algorithms for key C2 processes, namely (1) data fusion and recognized picture compilation, (2) decision-making and planning at operational and tactical levels, (3) plan supervision and repair. These have been implemented within two software testbeds - MOSES, a simulation of Operations Other Than War (OOTW) and CLARION+, an extension of CLARION, the UK land-air combat simulation.},
author = {Mason, Colin R. and Moffat, James},
doi = {10.1109/WSC.2000.899896},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Mason, Moffat, Lx - 2001 - Representing The C2 Process In Simulations Modelling The Human Decision-Maker.pdf:pdf},
issn = {02750708},
journal = {Winter Simulation Conference Proceedings},
mendeley-groups = {C2},
month = {sep},
pages = {940--949},
title = {{Representing the C2 process in simulations: Modelling the human decision-maker}},
volume = {1},
year = {2000}
}

@inproceedings{DSPL100-03,
annote = {Changes in assumptios ={\textgreater} controller change


(C - hotswap C') || (E reconfigure E')

E is an environment model in LTKS (Labelled Transition Kripke Structure)},
author = {Nahabedian, Leandro and Braberman, Víctor A and D'Ippolito, Nicol{\'{a}}s and Honiden, Shinichi and Kramer, Jeff and Tei, Kenji and Uchitel, Sebasti{\'{a}}n},
booktitle = {Proceedings of the 11th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, SEAMS@ICSE 2016, Austin, Texas, USA, May 14-22, 2016},
doi = {10.1145/2897053.2897056},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Nahabedian et al. - 2016 - Assured and correct dynamic update of controllers.pdf:pdf},
isbn = {978-1-4503-4187-5},
mendeley-groups = {2Read,SEAMS},
pages = {96--107},
publisher = {ACM},
title = {{Assured and correct dynamic update of controllers}},
url = {https://doi.org/10.1145/2897053.2897056},
year = {2016}
}


@article{SANTOS2018162,
abstract = {Model-driven development (MDD) is an approach for supporting the development of software systems, in which high-level modeling artifacts drive the production of time and effort-consuming low-level artifacts, such as the source code. Previous studies of the MDD effectiveness showed that it significantly increases development productivity, because the development effort is focused on the business domain rather than technical issues. However, MDD was exploited in the context of agent-based development in a limited way, and most of the existing proposals demonstrated the effectiveness of using MDD in this context by argumentation or examples, lacking disciplined empirical analyses. In this paper, we explore the use of MDD for agent-based modeling and simulation in the adaptive traffic signal control (ATSC) domain, in which autonomous agents are in charge of managing traffic light indicators to optimize traffic flow. We propose an MDD approach, composed of a modeling language and model-to-code transformations for producing runnable simulations automatically. In order to analyze the productivity gains of our MDD approach, we compared the amount of design and implementation artifacts produced using our approach and traditional simulation platforms. Results indicate that our approach reduces the workload to develop agent-based simulations in the ATSC domain.},
annote = {Agent-based Modelling and Simulation},
author = {Santos, Fernando and Nunes, Ingrid and Bazzan, Ana L C},
doi = {https://doi.org/10.1016/j.simpat.2017.11.006},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Santos, Nunes, Bazzan - 2018 - Model-driven agent-based simulation development A modeling language and empirical evaluation in the adapt.pdf:pdf},
issn = {1569-190X},
journal = {Simulation Modelling Practice and Theory},
keywords = {Agent-based modeling and simulation,Development effort,Model-driven development,Traffic signal control},
mendeley-groups = {2Read},
pages = {162--187},
title = {{Model-driven agent-based simulation development: A modeling language and empirical evaluation in the adaptive traffic signal control domain}},
url = {http://www.sciencedirect.com/science/article/pii/S1569190X17301673},
volume = {83},
year = {2018}
}

@inproceedings{UUV,
abstract = {Recent advances in embedded systems and underwater communications raised the autonomy levels in unmanned underwater vehicles (UUVs) from human-driven and scripted to adaptive and self-managing. UUVs can execute longer and more challenging missions, and include functionality that enables adaptation to unexpected oceanic or vehicle changes. As such, the simulated UUV exemplar UNDERSEA introduced in our paper facilitates the development, evaluation and comparison of self-adaptation solutions in a new and important application domain. UNDERSEA comes with predefined oceanic surveillance UUV missions, adaptation scenarios, and a reference controller implementation, all of which can easily be extended or replaced.},
annote = {The UUV controller executes all steps defined in MAPE loop

The UUV Controller sounds as our MDSPL with MAPE-K loop},
author = {Gerasimou, S and Calinescu, R and Shevtsov, S and Weyns, D},
booktitle = {2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS)},
doi = {10.1109/SEAMS.2017.19},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Gerasimou et al. - 2017 - UNDERSEA An Exemplar for Engineering Self-Adaptive Unmanned Underwater Vehicles.pdf:pdf},
keywords = {Adaptive systems,Middleware,Sensor systems,Surveillance,Switches,UNDERSEA,UUV missions,adaptive control,autonomous underwater vehicles,embedded systems,oceanic surveillance,self-adaptation,self-adaptive embedded systems,self-adaptive unmanned underwater vehicles,self-adjusting systems,surveillance,underwater communications,unmanned underwater vehicle exemplar},
mendeley-groups = {SEAMS},
month = {may},
pages = {83--89},
title = {{UNDERSEA: An Exemplar for Engineering Self-Adaptive Unmanned Underwater Vehicles}},
year = {2017}
}


@book{Apel2013,
annote = {Mass customization: construct individual solutions based on a portfolio of reusable software components

Mass production: reusability permits high level of productivity


- Tailor-made: customized product (whole set of different products using small common parts)
- Reduced costs
- Improved quality
- React to market changes (It can be extended to context change?)},
author = {Apel, Sven and Batory, Don and K{\"{a}}stner, Christian and Saake, Gunter},
booktitle = {Jornal},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Apel et al. - 2013 - Feature-Oriented Software Product Lines, Concepts and Implementation.pdf:pdf},
mendeley-groups = {Pre-Revision},
publisher = {Springer},
title = {{Feature-Oriented Software Product Lines, Concepts and Implementation}},
year = {2013}
}



@article{DSPL100-01,
annote = {The Software Engineering Insti-tute (SEI) defines an SPL as “a set
of software-intensive systems that
share a common, managed set
of features satisfying the specific
needs of a particular market seg-ment or mission and that are devel-oped from a common set of core
assets in a prescribed way” (www.
sei.cmu.edu/productlines).



{\textgreater}{\textgreater}{\textgreater} Domain engineering involves analyzing the product line as a whole and producing any com-mon (and reusable) variable parts.

{\textgreater}{\textgreater}{\textgreater} Application engineering involves creating product-specific parts and integrating all aspects of individual products.},
author = {Hallsteinsen, Svein O and Hinchey, Mike and Park, Sooyong and Schmid, Klaus},
doi = {10.1109/MC.2008.123},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Hallsteinsen et al. - 2008 - Dynamic Software Product Lines.pdf:pdf},
journal = {{\{}IEEE{\}} Computer},
mendeley-groups = {2Read},
number = {4},
pages = {93--95},
title = {{Dynamic Software Product Lines}},
url = {https://doi.org/10.1109/MC.2008.123},
volume = {41},
year = {2008}
}


@article{Hinchey2012,
author = {Hinchey, Mike and Park, Sooyong and Schmid, Klaus},
doi = {10.1109/MC.2012.332},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Hinchey, Park, Schmid - 2012 - Building Dynamic Software Product Lines.pdf:pdf},
journal = {IEEE Computer},
month = {oct},
number = {10},
pages = {22--26},
title = {{Building Dynamic Software Product Lines}},
volume = {45},
year = {2012}
}

@incollection{Cheng2009,
abstract = {The goal of this roadmap paper is to summarize the state-of-the-art and to identify critical challenges for the systematic software engineering of self-adaptive systems. The paper is partitioned into four parts, one for each of the identified essential views of self-adaptation: modelling dimensions, requirements, engineering, and assurances. For each view, we present the state-of-the-art and the challenges that our community must address. This roadmap paper is a result of the Dagstuhl Seminar 08031 on ``Software Engineering for Self-Adaptive Systems,'' which took place in January 2008.},
address = {Berlin, Heidelberg},
author = {Cheng, Betty H C and de Lemos, Rog{\'{e}}rio and Giese, Holger and Inverardi, Paola and Magee, Jeff and Andersson, Jesper and Becker, Basil and Bencomo, Nelly and Brun, Yuriy and Cukic, Bojan and {Di Marzo Serugendo}, Giovanna and Dustdar, Schahram and Finkelstein, Anthony and Gacek, Cristina and Geihs, Kurt and Grassi, Vincenzo and Karsai, Gabor and Kienle, Holger M and Kramer, Jeff and Litoiu, Marin and Malek, Sam and Mirandola, Raffaela and M{\"{u}}ller, Hausi A and Park, Sooyong and Shaw, Mary and Tichy, Matthias and Tivoli, Massimo and Weyns, Danny and Whittle, Jon},
booktitle = {Software Engineering for Self-Adaptive Systems},
doi = {10.1007/978-3-642-02161-9_1},
editor = {Cheng, Betty H C and de Lemos, Rog{\'{e}}rio and Giese, Holger and Inverardi, Paola and Magee, Jeff},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Cheng et al. - 2009 - Software Engineering for Self-Adaptive Systems A Research Roadmap.pdf:pdf},
isbn = {978-3-642-02161-9},
mendeley-groups = {Pre-Revision},
pages = {1--26},
publisher = {Springer Berlin Heidelberg},
title = {{Software Engineering for Self-Adaptive Systems: A Research Roadmap}},
url = {https://doi.org/10.1007/978-3-642-02161-9{\_}1},
year = {2009}
}


@inbook{SAS100-04,
author = {Brun, Y and {Di Marzo Serugendo}, Giovanna and Gacek, Cristina and Giese, Holger and Kienle, Holger and Litoiu, Marin and M{\"{u}}ller, Hausi and Pezze, P and Shaw, Mary},
file = {:Users/junier/Downloads/brun2009.pdf:pdf},
mendeley-groups = {Related},
title = {{Engineering self-adaptive systems through feedback loops}},
year = {2009}
}

@article{HILAIRE20131323,
abstract = {For more than 20years, researchers have designed models in order to describe swarm intelligence and apply the resulting techniques to complex problems. However, there is still a gap between these models and current MAS methodologies. The goal of this paper is to propose a principled and methodological approach for the engineering of systems based upon swarm intelligence. The constraints are, on the one hand, to enable the analysis, design and implementation of such systems; and, on the other hand, to formally analyze and verify properties of resulting systems. The principles of the approach are based, on the one hand, on requirement driven activities that produce goals to be fulfilled by the system of interest and, on the other, hand on an ontological modeling of the problem domain. This ontological modeling conceptualizes the phenomenon one seek to imitate and thus allows it understanding. The produced ontology is refined through the methodology activities down to organizational models.},
annote = {The goal of this paper is to propose a principled and methodological approach for the engineering of systems based upon swarm intelligence

={\textgreater} self-organizing behaviors and adaptability

={\textgreater} The association sensor/processing algorithms is then called Percep- tive Unit (PU)},
author = {Hilaire, Vincent and Cossentino, Massimo and Gechter, Franck and Rodriguez, Sebastian and Koukam, Abderaffiaa},
doi = {https://doi.org/10.1016/j.eswa.2012.08.058},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Hilaire et al. - 2013 - An approach for the integration of swarm intelligence in MAS An engineering perspective.pdf:pdf},
issn = {0957-4174},
journal = {Expert Systems with Applications},
keywords = {Agent-oriented software engineering,Agents,Swarming systems},
mendeley-groups = {UAV},
number = {4},
pages = {1323--1332},
title = {{An approach for the integration of swarm intelligence in MAS: An engineering perspective}},
url = {http://www.sciencedirect.com/science/article/pii/S0957417412010196},
volume = {40},
year = {2013}
}


@book{Dunin-Keplicz2010,
annote = {page 66
-Awareness-dial: this adjust the level of awareness and helps with the way that the team orginizes itself.

* global awareness ={\textgreater} the group is aware that for all action, there is a pair of agents (i,j) where agent i is aware about j intention
* detailed awareness ={\textgreater} for all actions in the plan, there is a pair of agents (i,j), such that the group is aware that the agent i is committed to agent j to fullfill the action alfa

The different degrees of awareness is characterized in terms of different types of beliefs.

Dial: a manner to adjust the level of awareness (collective awareness)

The awareness dial will define the collective commitment level
- negotiating and persuading one another who will do what.


Strongest type of group commitment: (1)robust collective Commitment

(2) Strong collective commitment (the group as a whole believes that things are under control)

(3) Weak collective commitment: there is no collective awareness about the plan correctness; the group does not know the plan details but still beleive that the thing are under control


Team commintment: the awareness-dial is putted in a way that the collective intention ensures that the team structure exists and the overall goal and composition of the team are commonly believed

The most simple structure is done by: one initiator element controls the team

Topologies:
1 - Robust Commitment + Single Initiator + Full Communication
2- Star Topology + Single Initiator + Restricted Communication
3- Ring topology + Single initiator (similar to swarm gap strategy - base article)
4- Hierarchical group (tree)




===========

TeamWork


Awareness ={\textgreater} observation, communication or reasoning
(Beliefs about itself, about the others and about the environment

Levels of awareness: intra-personal (itself), inter-personal(others) and group awareness


BDI ={\textgreater} Beliefs; Desires; Intentions

Symbols:
P ={\textgreater} set of Propositional symbols
A ={\textgreater} set Agents

L ={\textgreater} set of Formulas
to all proposition p in P is a formula
if phi and psi are formulas, than we have not phi as well as phi {\&} psi are formulas

E-BEL ={\textgreater} general believes of a group
C-BEL ={\textgreater} common believes of a group

BEL(i, phi) ={\textgreater} agent i believes that phi

Kripke model (M) ={\textgreater} set of worlds, set of accessibility relations between worlds and a valuation of the propositional atoms, as follows.
M=(W,Bi:i in A, Val)

A team is a group in which the agents are restricted to having a common goal of some sort. Typically, team members cooperate and assist each other in achieving their common goal. (Weiss)

Intention: set of goals that the agent has the focus on
INT(i, phi) - agent i has the intention to achieve phi
GOAL(i, phi) - agent i has the goal to achieve phi


In TeamLog the teams are created based on the collective intention
intentions are different from beliefs and desires

Cooperative Groups definition (cooperation from game theory)

To avoid the competition, all members have to have the individual intention of others 
M-INTg(Phi) ={\textgreater} the group g has the Mutual Intention to achieve phi

Group awareness is the common belief C-BELg of the Mutual Intention
C-BELg(M-INTg(phi))

==={\textgreater} common knowledge common belief because CK can be justified

With no communication, C-BEL does not hold and the C-INT neither.},
author = {Dunin-Keplicz, Barbara and Verbrugge, Rineke},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Dunin-Keplicz, Verbrugge - 2010 - Teamwork in Multi-Agent Systems, A Formal Approach.pdf:pdf},
mendeley-groups = {Pre-Revision},
publisher = {Wiley},
title = {{Teamwork in Multi-Agent Systems, A Formal Approach}},
year = {2010}
}


@article{Hallsteinsen2012,
abstract = {Today software is the main enabler of many of the appliances and devices omnipresent in our daily life and important for our well being and work satisfaction. It is expected that the software works as intended, and that the software always and everywhere provides us with the best possible utility. This paper discusses the motivation, technical approach, and innovative results of the MUSIC project. MUSIC provides a comprehensive software development framework for applications that operate in ubiquitous and dynamic computing environments and adapt to context changes. Context is understood as any information about the user needs and operating environment which vary dynamically and have an impact on design choices. MUSIC supports several adaptation mechanisms and offers a model-driven application development approach supported by a sophisticated middleware that facilitates the dynamic and automatic adaptation of applications and services based on a clear separation of business logic, context awareness and adaptation concerns. The main contribution of this paper is a holistic, coherent presentation of the motivation, design, implementation, and evaluation of the MUSIC development framework and methodology.},
annote = {Self-Adaptive Systems},
author = {Hallsteinsen, S and Geihs, K and Paspallis, N and Eliassen, F and Horn, G and Lorenzo, J and Mamelli, A and Papadopoulos, G A},
doi = {https://doi.org/10.1016/j.jss.2012.07.052},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Hallsteinsen et al. - 2012 - A development framework and methodology for self-adapting applications in ubiquitous computing environments.pdf:pdf},
issn = {0164-1212},
journal = {Journal of Systems and Software},
keywords = {Adaptive software,Middleware,Mobile computing,Model-driven development,Ubiquitous computing},
mendeley-groups = {Pre-Revision},
number = {12},
pages = {2840 -- 2859},
title = {{A development framework and methodology for self-adapting applications in ubiquitous computing environments}},
url = {http://www.sciencedirect.com/science/article/pii/S0164121212002245},
volume = {85},
year = {2012}
}

@article{Gren2019AgilityIR,
  title={Agility is responsiveness to change: An essential definition},
  author={Lucas Gren and Per Lenberg},
  journal={ArXiv},
  year={2019},
  volume={abs/1909.10082}
}


@article{simulation01,
author = {Travassos, Guilherme and Barros, M{\'{a}}rcio},
file = {:Users/junier/Downloads/WSESETravassos.pdf:pdf},
journal = {The Future of Empirical Studies in Software Engineering: Proceedings of the ESEIW 2003 Workshop on Empirical Stuides in Software Engineering, WSESE 2003; Roman Castles, Italy, September 29th, 2003},
mendeley-groups = {BASE},
pages = {117},
title = {{Contributions of In Virtuo and In Silico Experiments for the Future of Empirical Studies in Software Engineering Contributions of In Virtuo and In Silico Experiments for the Future of Empirical Studies in Software Engineering}},
volume = {2},
year = {2004}
}


@inproceedings{qptl01,
author = {Kesten, Y and Pnueli, A},
booktitle = {Journal of Logic and Computation},
doi = {10.1109/LICS.1995.523239},
file = {:Users/junier/Downloads/10.1.1.40.4167.pdf:pdf},
isbn = {0-8186-7050-9},
mendeley-groups = {QPTL},
pages = {2--12},
title = {{A complete proof systems for QPTL}},
volume = {12},
year = {1995}
}

@inproceedings{apel100,
author = {Apel, Sven and Janda, Florian and Trujillo, Salvador and K{\"{a}}stner, Christian},
doi = {10.1007/978-3-642-02408-5_2},
file = {:Users/junier/Downloads/apel2009.pdf:pdf},
mendeley-groups = {2Read},
title = {{Model Superimposition in Software Product Lines}},
volume = {5563},
year = {2009}
}

@article{marin2005,
author = {Marin, Marius and Moonen, Leon and Deursen, Arie},
doi = {10.1145/1082983.1083140},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Marin, Moonen, Deursen - 2005 - An approach to aspect refactoring based on crosscutting concern types.pdf:pdf},
journal = {ACM SIGSOFT Software Engineering Notes},
mendeley-groups = {2Read},
pages = {1--5},
title = {{An approach to aspect refactoring based on crosscutting concern types}},
volume = {30},
year = {2005}
}


@article{apel2011,
author = {Apel, Sven and Kastner, Christian},
doi = {10.1109/TSE.2011.120},
file = {:Users/junier/Downloads/tse{\_}fh.pdf:pdf},
journal = {Software Engineering, IEEE Transactions on},
mendeley-groups = {2Read},
title = {{Language-Independent and Automated Software Composition: The FeatureHouse Experience}},
volume = {39},
year = {2011}
}

@inproceedings{clarkson2014,
author = {Clarkson, Michael and Finkbeiner, Bernd and Koleini, Masoud and Micinski, Kristopher and Rabe, Markus and Sanchez, Cesar},
doi = {10.1007/978-3-642-54792-8_15},
file = {:Users/junier/Downloads/post14-2.pdf:pdf},
mendeley-groups = {CTL{\_}LTL},
title = {{Temporal Logics for Hyperproperties}},
year = {2014}
}


@article{QPTL01,
author = {French, Tim and Reynolds, Mark},
file = {:Users/junier/Downloads/123fb6cd502ae364b1fd3dfd211251e60992.pdf:pdf},
journal = {Advances in Modal Logic},
mendeley-groups = {QPTL},
title = {{A Sound and Complete Proof System for QPTL}},
year = {2002}
}


@inproceedings{QPTL02,
author = {French, T},
booktitle = {10th International Symposium on Temporal Representation and Reasoning, 2003 and Fourth International Conference on Temporal Logic. Proceedings.},
doi = {10.1109/TIME.2003.1214891},
file = {:Users/junier/Downloads/quantified-propositional-temporal-logic-with-repeating-states.pdf:pdf},
issn = {1530-1311},
keywords = {Automata,Computer science,Encoding,Logic,Software engineering,computability,computational complexity,decidability,infinite discrete linear sequence,linear temporal logic,quantified propositional temporal logic,repeating states,satisfiability problem,temporal logic},
mendeley-groups = {QPTL},
month = {jul},
pages = {155--165},
title = {{Quantified propositional temporal logic with repeating states}},
year = {2003}
}


@inproceedings{LTL001,
author = {D{\'{e}}harbe, David},
doi = {10.1007/11889229_8},
file = {:Users/junier/Downloads/31670315.pdf:pdf},
mendeley-groups = {CTL{\_}LTL},
pages = {315--367},
title = {{Techniques for Temporal Logic Model Checking}},
year = {2004}
}


@inproceedings{deharbe2004,
author = {D{\'{e}}harbe, David},
doi = {10.1007/11889229_8},
file = {:Users/junier/Downloads/31670315.pdf:pdf},
mendeley-groups = {CTL{\_}LTL},
pages = {315--367},
title = {{Techniques for Temporal Logic Model Checking}},
year = {2004}
}

@article{survey01,
author = {Pfleeger, Shari and Kitchenham, Barbara},
doi = {10.1145/505532.505535},
file = {:Users/junier/Downloads/survey-1.pdf:pdf},
journal = {ACM SIGSOFT Software Engineering Notes},
mendeley-groups = {Survey},
pages = {16--18},
title = {{Principles of survey research: Part 1: Turning lemons into lemonade}},
volume = {26},
year = {2001}
}


@misc{Google2020,
author = {Google},
mendeley-groups = {Survey},
title = {{Google Forms}},
url = {https://www.google.com/forms/about/},
urldate = {2020-05-04},
year = {2020}
}


@article{SONG2016104,
abstract = {Although data values are available in almost every computer system, reasoning about them is a challenging task due to the huge data size or even infinite data domains. Temporal logics are the well-known specification formalisms for reactive and concurrent systems. Various extensions of temporal logics have been proposed to reason about data values, mostly in the last decade. Among them, one natural idea is to extend temporal logics with variable quantifications ranging over an infinite data domain. Grumberg, Kupferman and Sheinvald initiated the research on this topic recently and obtained several interesting results. However, there is still a lack of systematic investigation on the theoretical aspects of the variable extensions of temporal logics. Our goal in this paper is to fill this gap. Around this goal, we make the following choices: 1. We consider the variable extensions of two widely used temporal logics, Linear Temporal Logic (LTL) and Computation Tree Logic (CTL), and allow arbitrary nestings of variable quantifications with Boolean and temporal operators (the resulting logics are called respectively variable-LTL, in brief VLTL, and variable-CTL, in brief VCTL). 2. We investigate the decidability and complexity of both the satisfiability and model checking problems, over both finite and infinite words (trees). In particular, we obtain the following results: Existential variable quantifiers or one single universal quantifier in the beginning already entail the undecidability of the satisfiability problems of both VLTL and VCTL, over both finite and infinite words (trees); if only existential path quantifiers are used in VCTL, then the satisfiability problem (over finite trees) is decidable, no matter which variable quantifiers are available; for VLTL formulae with one single universal variable quantifier in the beginning, if the occurrences of the non-parameterized atomic propositions are guarded by the positive occurrences of the quantified variables, then its satisfiability problem becomes decidable, over both finite and infinite words; based on these results of the satisfiability problem, we deduce the (un)decidability results of the model checking problem.},
author = {Song, Fu and Wu, Zhilin},
doi = {https://doi.org/10.1016/j.ic.2016.08.002},
file = {:Users/junier/Library/Application Support/Mendeley Desktop/Downloaded/Song, Wu - 2016 - On temporal logics with data variable quantifications Decidability and complexity.pdf:pdf},
issn = {0890-5401},
journal = {Information and Computation},
keywords = {Alternating register automata,Data automata,Data variable quantifications,Decidability and complexity,Model checking,Satisfiability,Temporal logics},
mendeley-groups = {VLTL},
pages = {104--139},
title = {{On temporal logics with data variable quantifications: Decidability and complexity}},
url = {http://www.sciencedirect.com/science/article/pii/S0890540116300554},
volume = {251},
year = {2016}
}


@inproceedings{QCTL01,
author = {French, Tim},
booktitle = {LNCS},
doi = {10.1007/3-540-45656-2_15},
file = {:Users/junier/Downloads/french2001.pdf:pdf},
mendeley-groups = {CTL{\_}LTL},
pages = {165--176},
title = {{Decidability of Quantifed Propositional Branching Time Logics}},
volume = {2256},
year = {2001}
}
